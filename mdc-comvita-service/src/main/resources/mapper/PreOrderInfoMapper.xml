<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aquilaflycloud.mdc.mapper.PreOrderInfoMapper">


    <select id="pageOrderReportList"  parameterType="com.aquilaflycloud.mdc.param.pre.ReportFormParam"
            resultType="com.aquilaflycloud.mdc.result.pre.ReportOrderPageResult">
        select
        a.shop_id,
        shop_name shopName,
        sum(total_price) orderTotalPrice,
        count(id) orderNumber,
        b.refundOrderNumber refundOrderNumber,
        b.refundOrderTotalPrice refundOrderTotalPrice
        from
        pre_order_info a
        left join
        (select shop_id , sum(refund_price) refundOrderTotalPrice,count(id) refundOrderNumber
        from pre_refund_order_info
        where shop_id is not null
        <if test="param.shopId != null and param.shopId != ''">
            and shop_id = #{param.shopId}
        </if>
        <if test="param.createStartTime != null">
            AND create_time <![CDATA[>=]]> #{param.createStartTime}
        </if>
        <if test="param.createEndTime != null">
            AND create_time <![CDATA[<=]]> #{param.createEndTime}
        </if>
        group by shop_id
        ) b on a.shop_id=b.shop_id
        where a.order_state not in (1)
        <if test="param.shopId != null and param.shopId != ''">
            and a.shop_id = #{param.shopId}
        </if>
        <if test="param.createStartTime != null">
            AND a.create_time <![CDATA[>=]]> #{param.createStartTime}
        </if>
        <if test="param.createEndTime != null">
            AND a.create_time <![CDATA[<=]]> #{param.createEndTime}
        </if>
        group by a.shop_id
        order by a.create_time desc
    </select>
    <select id="achievementsGuide"  parameterType="com.aquilaflycloud.mdc.param.pre.ReportFormParam"
            resultType="com.aquilaflycloud.mdc.result.pre.ReportGuidePageResult">
        select
        a.guide_name guideName,
        a.guide_id guideId,
        count(a.id)- IFNULL(b.refundOrderNumber,0)  orderNumber,
        sum(a.total_price)-IFNULL(b.refundOrderTotalPrice,0)  orderPrice,
        IFNULL(mem.num,0) newCustomerNum
        from pre_order_info a
        left join (
        select guide_id , sum(total_price) refundOrderTotalPrice,count(id) refundOrderNumber
        from pre_refund_order_info
        where guide_id is not null
        <if test="param.guideName != null and param.guideName != ''">
            and guide_name = #{param.guideName}
        </if>
        <if test="param.createStartTime != null">
            AND create_time <![CDATA[>=]]> #{param.createStartTime}
        </if>
        <if test="param.createEndTime != null">
            AND create_time <![CDATA[<=]]> #{param.createEndTime}
        </if>
        group by guide_id
        )b on b.guide_id=a.guide_id
        left join(select guide_id,count(id) num from member_info  group by guide_id)  mem
        on mem.guide_id=a.guide_id
        where a.order_state=6
        <if test="param.guideName != null and param.guideName != ''">
            and a.guide_name = #{param.guideName}
        </if>
        <if test="param.createStartTime != null">
            AND a.create_time <![CDATA[>=]]> #{param.createStartTime}
        </if>
        <if test="param.createEndTime != null">
            AND a.create_time <![CDATA[<=]]> #{param.createEndTime}
        </if>
        group by a.guide_id
        order by a.guide_id desc
    </select>
    <select id="pageOrderInfoPageResult" parameterType="com.aquilaflycloud.mdc.param.pre.PreOrderInfoPageParam"
            resultType="com.aquilaflycloud.mdc.model.pre.PreOrderInfo">
        SELECT
        order_info.*
        FROM
        `pre_order_info` order_info
        <if test="param.after == 1">
            RIGHT JOIN `pre_refund_order_info` refund
            ON order_info.id = refund.order_id
        </if>
        where 1=1
        <if test="param.guideId != null and param.guideAfter != null">
            and order_info.guide_id = #{param.guideId}
        </if>
        <if test="param.memberId != null and param.memberId != ''">
            and order_info.member_id = #{param.memberId}
        </if>
        <if test="param.orderState != null">
            AND order_info.order_state = #{param.orderState}
        </if>
        <if test="param.buyerPhone != null and param.buyerPhone != ''">
            AND order_info.buyer_phone = #{param.buyerPhone}
        </if>
        <if test="param.startTime != null">
            AND order_info.create_time <![CDATA[>=]]> #{param.startTime}
        </if>
        <if test="param.endTime != null">
            AND order_info.create_time <![CDATA[<=]]> #{param.endTime}
        </if>
        order by order_info.create_time desc
    </select>
    <select id="pageOrderPageResultList"  parameterType="com.aquilaflycloud.mdc.param.pre.AdministrationListParam"
            resultType="com.aquilaflycloud.mdc.result.pre.OrderPageResult">
            select
                a.delivery_district  deliveryDistrict,
                a.delivery_province deliveryProvince,
                a.delivery_city deliveryCity,
                a.delivery_address deliveryAddress,
                a.order_code orderCode,
                a.create_time createTime,
                a.reserve_start_time reserveStartTime,
                a.delivery_time takeTime,
                b.order_state orderState,
                a.reserve_id memberId,
                a.reserve_name buyerName,
                a.reserve_phone buyerPhone,
                a.reserve_shop shopName,
                a.guide_name guideName,
                a.goods_code goodsCode,
                a.goods_name goodsName,
                count(a.id) orderNumber,
                a.goods_price goodsPrice,
                a.goods_price unitPrice
            from
            pre_order_goods a
            left join pre_order_info b on b.id=a.order_id
            where a.id is not null
        <if test="param.shopId != null and param.shopId != ''">
            and a.shop_id= #{param.shopId}
        </if>
        <if test="param.guideName != null and param.guideName != ''">
            and  a.guide_name= #{param.guideName}
        </if>
        <if test="param.orderState != null and param.orderState != ''">
            and  b.order_state= #{param.orderState.type}
        </if>
        <if test="param.orderCode != null and param.orderCode != ''">
            and  a.order_code= #{param.orderCode}
        </if>
        <if test="param.buyerName != null and param.buyerName != ''">
            and  a.reserve_name= #{param.buyerName}
        </if>
        <if test="param.createStartTime != null">
            AND a.create_time <![CDATA[>=]]> #{param.createStartTime}
        </if>
        <if test="param.createEndTime != null">
            AND a.create_time <![CDATA[<=]]> #{param.createEndTime}
        </if>
        group by a.id
        order by  a.create_time desc
    </select>
    <select id="pageSalePageResultList"  parameterType="com.aquilaflycloud.mdc.param.pre.AdministrationListParam"
            resultType="com.aquilaflycloud.mdc.result.pre.SalePageResult">
        select
        a.buyer_district  deliveryDistrict,
        a.buyer_province deliveryProvince,
        a.buyer_city deliveryCity,
        a.buyer_address deliveryAddress,
        a.order_code orderCode,
        a.shop_name shopName,
        a.order_state orderState,
        a.guide_name guideName,
        d.goodsCode goodsCode,
        d.goods_name goodsName,
        d.num orderNumber,
        d.goodsPrice goodsPrice,
        d.goodsPrice unitPrice,
        a.total_price totaGoodsPrice
        from
        pre_order_info a
        left join (select count(c.id) num,c.order_id orderId,  b.goods_price goodsPrice,
        b.goods_price unitPrice,b.goods_code goodsCode,c.goods_name
        from pre_order_goods c
        left join pre_goods_info b on b.goods_code=c.goods_code
        where c.goods_type not in (2) GROUP BY c.order_id) d on d.orderId=a.id
        where a.id is not null
        <if test="param.shopId != null and param.shopId != ''">
            and a.shop_id= #{param.shopId}
        </if>
        <if test="param.guideName != null and param.guideName != ''">
            and  a.guide_name= #{param.guideName}
        </if>
        <if test="param.orderState != null and param.orderState != ''">
            and  a.order_state= #{param.orderState.type}
        </if>
        <if test="param.orderCode != null and param.orderCode != ''">
            and  a.order_code= #{param.orderCode}
        </if>
        <if test="param.buyerName != null and param.buyerName != ''">
            and  a.buyer_name= #{param.buyerName}
        </if>
        <if test="param.createStartTime != null">
            AND a.create_time <![CDATA[>=]]> #{param.createStartTime}
        </if>
        <if test="param.createEndTime != null">
            AND a.create_time <![CDATA[<=]]> #{param.createEndTime}
        </if>
        order by  a.create_time desc

    </select>
    <select id="getNum"  parameterType="com.aquilaflycloud.mdc.param.pre.GoodsSaleNumParam"
            resultType="com.aquilaflycloud.mdc.result.pre.GoodsSalesVolumeResult">
    select
        a.num goodsSevenNum,
        b.num goodsFifteenNum,
        c.num goodsThirtyNum
    from
      (select
        count(id) num
        from
           pre_order_goods
        where goods_code=#{param.goodsCode} and
        create_time <![CDATA[>=]]> #{param.goodsSevenTime}) a,
         (select
          count(id) num
        from
           pre_order_goods
        where  goods_code=#{param.goodsCode} and
        create_time <![CDATA[>=]]> #{param.goodsFifteenTime}) b,
         (select
          count(id) num
        from
           pre_order_goods
        where  goods_code=#{param.goodsCode} and
        create_time <![CDATA[>=]]> #{param.goodsThirtyTime}) c
    </select>

    <select id="countOrderInfoGiftsInfo" resultType="java.lang.Integer">
        SELECT
          COUNT(info.`id`)
        FROM
          `pre_order_info` info
          INNER JOIN `pre_order_goods` or_goods
            ON info.`id` = or_goods.`order_id`
        WHERE or_goods.`goods_type` = 2
          AND info.`member_id` = #{memberId}
          AND info.`activity_info_id` = #{activityInfoId}
          AND info.`id` NOT IN
          (SELECT
            refund.order_id
          FROM
            `pre_refund_order_info` refund
            INNER JOIN `pre_order_info` order_info
              ON refund.`order_id` = order_info.`id`
          WHERE refund.`member_id` = #{memberId} AND refund.activity_info_id = #{activityInfoId})
    </select>
</mapper>
