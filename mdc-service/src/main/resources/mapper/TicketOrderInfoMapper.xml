<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aquilaflycloud.mdc.mapper.TicketOrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.aquilaflycloud.mdc.model.ticket.TicketOrderInfo">
    <!--@mbg.generated-->
    <!--@Table ticket_order_info-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="merchant_code" jdbcType="VARCHAR" property="merchantCode" />
    <result column="merchant_name" jdbcType="VARCHAR" property="merchantName" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="out_order_no" jdbcType="VARCHAR" property="outOrderNo" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="settle_fee" jdbcType="DECIMAL" property="settleFee" />
    <result column="selling_fee" jdbcType="DECIMAL" property="sellingFee" />
    <result column="order_qty" jdbcType="INTEGER" property="orderQty" />
    <result column="ecode" jdbcType="VARCHAR" property="ecode" />
    <result column="url_ecode" jdbcType="LONGVARCHAR" property="urlEcode" />
    <result column="code_qty" jdbcType="INTEGER" property="codeQty" />
    <result column="code_cnt" jdbcType="INTEGER" property="codeCnt" />
    <result column="use_qty" jdbcType="INTEGER" property="useQty" />
    <result column="use_cnt" jdbcType="INTEGER" property="useCnt" />
    <result column="refund_qty" jdbcType="INTEGER" property="refundQty" />
    <result column="refund_cnt" jdbcType="INTEGER" property="refundCnt" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="id_card_name" jdbcType="VARCHAR" property="idCardName" />
    <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo" />
    <result column="orderno_otaorderno_relation_id" jdbcType="BIGINT" property="ordernoOtaordernoRelationId" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="sub_tenant_id" jdbcType="BIGINT" property="subTenantId" />
    <result column="channel_id" jdbcType="BIGINT" property="channelId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>

  <resultMap id="refundResultMap" type="com.aquilaflycloud.mdc.result.ticket.TicketOrderResult" extends="BaseResultMap">
    <result column="wx_nick_name" jdbcType="VARCHAR" property="wxNickName" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
  </resultMap>

  <select id="selectCodeUnt" parameterType="com.aquilaflycloud.mdc.param.ticket.TicketVerificatePageParam" resultType="java.lang.Long">
    SELECT ifnull(sum(a.order_qty),0)
    FROM ticket_order_info a
    LEFT JOIN ticket_product_info b ON a.product_id = b.product_id
    LEFT JOIN ticket_scenic_spot_info c ON b.scenic_spot_id = c.id
    where
    <choose>
      <when test="status != null">
        a.status = #{status}
      </when>
      <otherwise>
        (a.status = 10 or a.status = 22 or a.status = 23)
      </otherwise>
    </choose>
    <include refid="Query_List_Where"/>
  </select>

  <!--<select id="selectVerificateOrderNum" parameterType="com.aquilaflycloud.mdc.param.ticket.TicketVerificatePageParam" resultType="java.lang.Long">-->
    <!--SELECT COUNT(*)  -->
    <!--FROM ticket_order_info a-->
    <!--LEFT JOIN ticket_product_info b ON a.product_id = b.product_id-->
    <!--LEFT JOIN ticket_scenic_spot_info c ON b.scenic_spot_id = c.id-->
    <!--LEFT JOIN ticket_order_info d ON a.out_order_no = d.out_order_no-->
    <!--where (a.status = 22 or a.status = 23)-->
    <!--<include refid="Query_List_Where"/>-->
  <!--</select>-->

  <select id="verificateStatistic" parameterType="com.aquilaflycloud.mdc.param.ticket.TicketVerificatePageParam" resultType="com.aquilaflycloud.mdc.result.ticket.TicketVerificateStatisticResult">
    SELECT ifnull(sum(a.use_qty),0) usedNum,COUNT(*) verificateOrderNum
    FROM ticket_order_info a
    LEFT JOIN ticket_product_info b ON a.product_id = b.product_id
    LEFT JOIN ticket_scenic_spot_info c ON b.scenic_spot_id = c.id
    where
    <choose>
    <when test="status != null">
      a.status = #{status}
    </when>
    <otherwise>
      (a.status = 22 or a.status = 23)
    </otherwise>
  </choose>
    <include refid="Query_List_Where"/>
  </select>

  <sql id="Query_List_Where">
    <if test='dataAuthParam.getAliasCompleteSql("a") != null'>
      AND ${dataAuthParam.getAliasCompleteSql("a")}
    </if>
    <if test="type != null">
      AND c.type = #{type}
    </if>
    <if test="mobile != null and mobile != ''">
      AND a.mobile like CONCAT('%',#{mobile},'%')
    </if>
    <if test="outOrderNo != null and outOrderNo != ''">
      AND a.out_order_no like CONCAT('%',#{outOrderNo},'%')
    </if>
    <if test="productName != null and productName != ''">
      AND a.product_name like CONCAT('%',#{productName},'%')
    </if>
    <if test="startDate != null">
      AND a.start_date <![CDATA[>=]]> #{startDate}
    </if>
    <if test="endDate != null">
      AND a.end_date <![CDATA[<=]]> #{endDate}
    </if>
    <if test="createTimeStart != null">
      AND a.create_time <![CDATA[>=]]> #{createTimeStart}
    </if>
    <if test="createTimeStart != null">
      AND a.create_time <![CDATA[<=]]> #{createTimeEnd}
    </if>
    <if test="minAmount != null">
      AND a.amount <![CDATA[>=]]> #{minAmount}
    </if>
    <if test="maxAmount != null">
      AND a.amount <![CDATA[<=]]> #{maxAmount}
    </if>
  </sql>

  <select id="selectByParams" parameterType="com.aquilaflycloud.mdc.param.ticket.OrderRefundPageParam" resultMap="refundResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM ticket_order_info a
    LEFT JOIN ticket_product_info b ON a.product_id = b.product_id
    LEFT JOIN ticket_scenic_spot_info c ON b.scenic_spot_id = c.id
    where a.status = 31
    <if test="param2.scenicSpotType != null">
      AND c.type = #{param2.scenicSpotType}
    </if>
    <if test="param2.mobileLike != null and param2.mobileLike != ''">
      AND a.mobile like CONCAT('%',#{param2.mobileLike},'%')
    </if>
    <if test="param2.outOrderNoLike != null and param2.outOrderNoLike != ''">
      AND a.out_order_no like CONCAT('%',#{param2.outOrderNoLike},'%')
    </if>
    <if test="param2.productNameLike != null and param2.productNameLike != ''">
      AND a.product_name like CONCAT('%',#{param2.productNameLike},'%')
    </if>
    <if test="param2.createTimeStart != null">
      AND a.create_time <![CDATA[>=]]> #{param2.createTimeStart}
    </if>
    <if test="param2.createTimeStart != null">
      AND a.create_time <![CDATA[<=]]> #{param2.createTimeEnd}
    </if>
    <if test="param2.refundTimeStart != null">
      AND a.last_update_time <![CDATA[>=]]> #{param2.refundTimeStart}
    </if>
    <if test="param2.refundTimeStart != null">
      AND a.last_update_time <![CDATA[<=]]> #{param2.refundTimeEnd}
    </if>
    <if test="param2.minAmount != null">
      AND a.amount <![CDATA[>=]]> #{param2.minAmount}
    </if>
    <if test="param2.maxAmount != null">
      AND a.amount <![CDATA[<=]]> #{param2.maxAmount}
    </if>
    ORDER BY a.create_time DESC
    <if test="param2.pageSize != null and param2.pageSize > 0">
      limit #{param1}, #{param2.pageSize}
    </if>
  </select>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    a.id, a.merchant_code, a.merchant_name, a.order_no, a.out_order_no, a.product_id, a.settle_fee,
    a.selling_fee, a.order_qty, a.ecode, a.url_ecode, a.refund_qty, a.start_date, a.end_date, a.mobile,
    a.id_card_name, a.id_card_no, a.orderno_otaorderno_relation_id, a.member_id, a.create_time,a.last_update_time,
    a.tenant_id, a.sub_tenant_id, a.channel_id, a.product_name, a.amount, (a.refund_qty * a.settle_fee) refund_amount
  </sql>

  <select id="countByParams" parameterType="com.aquilaflycloud.mdc.param.ticket.OrderRefundPageParam" resultType="java.lang.Long">
    SELECT COUNT(*)
    FROM ticket_order_info a
    LEFT JOIN ticket_product_info b ON a.product_id = b.product_id
    LEFT JOIN ticket_scenic_spot_info c ON b.scenic_spot_id = c.id
    where a.status = 31
    <if test="scenicSpotType != null">
      AND c.type = #{scenicSpotType}
    </if>
    <if test="mobileLike != null and mobileLike != ''">
      AND a.mobile like CONCAT('%',#{mobileLike},'%')
    </if>
    <if test="outOrderNoLike != null and outOrderNoLike != ''">
      AND a.out_order_no like CONCAT('%',#{outOrderNoLike},'%')
    </if>
    <if test="productNameLike != null and productNameLike != ''">
      AND a.product_name like CONCAT('%',#{productNameLike},'%')
    </if>
    <if test="createTimeStart != null">
      AND a.create_time <![CDATA[>=]]> #{createTimeStart}
    </if>
    <if test="createTimeStart != null">
      AND a.create_time <![CDATA[<=]]> #{createTimeEnd}
    </if>
    <if test="refundTimeStart != null">
      AND a.last_update_time <![CDATA[>=]]> #{refundTimeStart}
    </if>
    <if test="refundTimeStart != null">
      AND a.last_update_time <![CDATA[<=]]> #{refundTimeEnd}
    </if>
    <if test="minAmount != null">
      AND a.amount <![CDATA[>=]]> #{minAmount}
    </if>
    <if test="maxAmount != null">
      AND a.amount <![CDATA[<=]]> #{maxAmount}
    </if>
  </select>

    <update id="updateOrderInfo" parameterType="com.aquilaflycloud.mdc.model.ticket.TicketOrderInfo">
      update ticket_order_info set payment_type=#{paymentType.type}, status=#{status.type}
      WHERE 1=1
      <if test="merchantCode != null and merchantCode != ''">
        and merchant_code=#{merchantCode}
      </if>
      <if test="productId != null">
        and product_id=#{productId}
      </if>
      <if test="orderNo != null and orderNo != ''">
        and order_no=#{orderNo}
      </if>
      <if test="outOrderNo != null and outOrderNo != ''">
        and out_order_no=#{outOrderNo}
      </if>
      <if test="ecode != null and ecode != ''">
        and ecode=#{ecode}
      </if>
    </update>
</mapper>